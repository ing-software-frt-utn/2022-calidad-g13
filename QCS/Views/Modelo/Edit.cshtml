@model Negocio.Modelos.ModelModelo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ModelModelo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Denominacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Denominacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Denominacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LimiteSuperiorObs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LimiteSuperiorObs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LimiteSuperiorObs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LimiteInferiorObs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LimiteInferiorObs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LimiteInferiorObs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LimiteSuperiorRep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LimiteSuperiorRep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LimiteSuperiorRep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LimiteInferiorRep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LimiteInferiorRep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LimiteInferiorRep, "", new { @class = "text-danger" })
        </div>
    </div>

    <select multiple="multiple" style="width: 100%" ; id="lista" name="selectedColors">


        @foreach (var color in ViewBag.Colores)
        {
            string sel = (Model.Colores.Any(mc => mc.Codigo == color.Codigo)) ? "selected" : "";
            <option value="@color.Codigo" @sel> @color.Descripcion</option>

        }
    </select>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
